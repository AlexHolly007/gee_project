import React, { useState, useEffect } from 'react';
import '../css/timeCard.css';

export default function TimeCard() {
    const [imageUrls, setImageUrls] = useState([]);

    useEffect(() => {
        // Fetch image URLs from your directory
        const fetchImageUrls = async () => {
            try {
                const response = await fetch('your-image-directory-url');
                if (response.ok) {
                    const data = await response.json();
                    setImageUrls(data.imageUrls); // Assuming data is in the format { imageUrls: [...] }
                } else {
                    throw new Error('Failed to fetch image URLs');
                }
            } catch (error) {
                console.error('Error fetching image URLs:', error);
            }
        };

        fetchImageUrls();

        // Cleanup function if needed
        return () => {
            // Cleanup code here if needed
        };
    }, []);

    return (
        <div className='timeContainer'>
            <div className="bigCard">
                <h1>Header</h1>
                <div className="imageContainer">
                    {imageUrls.map((imageUrl, index) => (
                        <img key={index} src={imageUrl} alt={`Image ${index}`} />
                    ))}
                </div>
            </div>
        </div>
    );
}

// This is what I typed up
    const [imageUrls, setImageUrls] = useState([]);

    useEffect(() => {

        // Fetch image URLS from your directory
        const fetchImageUrls = async () => {
            try {
                const response = await fetch('../../imgs')
                if (response.ok) {
                    const data = await response.json();
                    setImageUrls(data.imageUrls)
                } else {
                    throw new Error('Failed to fetch image URLs');
                }
            } catch (error) {
                console.error('Error fetching image URLs:', error);
            }
        };

        fetchImageUrls();

    }, []);